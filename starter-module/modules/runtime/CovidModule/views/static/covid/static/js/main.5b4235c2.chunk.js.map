{"version":3,"sources":["api.js","jsx/components/Patient/RegisterPatient.js","jsx/components/Vaccination/AddViccination.js","jsx/components/Transfer/Transfer.js","jsx/components/Patient/DeletePatient.js","jsx/components/Patient/PatientList.js","jsx/components/Admission/AdmissionList.js","jsx/components/ICU/ICUList.js","jsx/components/DischargeDead/DischargeDeathList.js","jsx/components/Vaccination/VaccinationList.js","jsx/components/Home.js","jsx/components/Patient/EditPatient.js","jsx/components/Patient/PatientCard.js","jsx/components/Admission/InclusionCriteria.js","jsx/components/Admission/Demograhic.js","jsx/components/Admission/Vaccination.js","jsx/components/Admission/Comorbitie.js","jsx/components/Admission/VitalSign.js","jsx/components/Admission/ReInfection.js","jsx/components/Admission/ChronicMedication.js","jsx/components/Admission/Medication.js","jsx/components/Admission/SignsSymptons.js","jsx/components/Admission/SupportiveCare.js","jsx/components/Admission/AddmissionHome.js","jsx/components/Patient/PatientChart/Bmi.js","jsx/components/Patient/PatientChart/Height.js","jsx/components/Patient/PatientChart/ViccinationStatus.js","jsx/components/Patient/PatientChart/Index.js","jsx/components/Vaccination/VaccinationHistory.js","jsx/components/Patient/PatientDetail.js","App.js","reportWebVitals.js","context/ThemeDemo.js","context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","useStyles","makeStyles","theme","button","margin","spacing","error","color","fontSize","UserRegistration","props","history","useHistory","classes","useState","address","dob","first_name","gender","last_name","mid_name","participant_id","phone","status","values","setValues","errors","setErrors","saving","setSaving","handleInputChange","e","target","name","value","autoClose","hideProgressBar","Card","className","cardBottom","CardContent","to","pathname","Button","variant","startIcon","style","textTransform","FormGroup","Label","for","Input","type","id","onChange","required","time","regDate","value1","moment","format","max","Date","Spinner","onClick","preventDefault","temp","Object","every","x","validate","axios","post","baseUrl","headers","then","response","toast","success","push","catch","getAge","card","display","flexDirection","alignItems","form","width","marginTop","submit","marginBottom","Select","height","root","input","Vaccination","console","log","patientObj","vaccination","setVaccination","category","patient_id","questionAnswers","visit_date","objValues","a","data","useEffect","patients","today","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","Modal","isOpen","showModal","toggle","size","Form","ModalHeader","backgroundColor","ModalBody","CardBody","map","datatype","responses","obj","entries","question_id","answer","loadPatients","disabled","VitalSigns","transferStatus","setTransferStatus","current_status","setObjValues","show","Header","Body","delete","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","patientList","setPatientList","setpatientObj","modal","setModal","transferModal","setTransferModal","deleteModal","setDeleteModal","icons","title","columns","field","filtering","row","patient","vaccination_status","Icon","hospital_number","phone_number","age","undefined","currentStatus","actions","border","borderRadius","state","loadTransferModal","loadVaccinationModal","DeletePatientModal","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","pageSize","debounceInterval","Transfer","DeletePatient","filter","VaccinationStatus","v_status","loadVaccinationaModal","divStyle","Home","key","setKey","Row","Col","xl","Tabs","activeKey","onSelect","k","Tab","eventKey","VaccinationList","AdmissionList","ICUList","DischargeDeathList","EditPatient","defaultValue","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","md","root2","ExpansionPanelDetails","content","label","basic","pointing","as","classNames","Typography","Divider","ExpansionPanelActions","InclusionCriteria","getInclusionHistory","Demograhic","getDemographicHistory","Viccination","getVaccinationHistory","Commorbitie","getComobitieHistory","getVitalsHistory","ReInfection","getReinfectionHistory","ChronicMedication","getChronicMedicationHistory","Medication","getMedicationHistory","SignsSymptons","getSignsSymptomsHistory","SupportiveCare","getSupportiveCareHistory","patientObjValue","inclusionCriteriaModal","setInclusionCriteriaModal","demographicModal","setDemographicModal","viccinationModal","setViccinationModal","comorbitieModal","setComorbitieModal","vitalSignModal","setVitalSignModal","reInfectionModal","setReinfectionModal","signsSymptomsModal","setSignsSymptomsModal","medicationModal","setMedicationModal","chronicMedicationModal","setChronicMedicationModal","supportiveCareModal","setSupportiveCareModal","vaccinationHistory","setVaccinationHistory","inclusionHistory","setInclusionHistory","demograhicHistory","setDemographicHistory","vitalHistory","setVitalHistory","comobitieHistory","setComobitieHistory","reinfectionHistory","setReinfectionHistory","signsSymptomsHistory","setSignsSymptomsHistory","chronicMedicationHistory","setChronicMedicationHistory","medicationHistory","setMedicationHistory","supportiveCarenHistory","setSupportiveCareHistory","Grid","centered","padded","Column","Segment","raised","ribbon","cursor","List","divided","Item","Content","floated","VitalSign","Comorbitie","uv","pv","amt","Example","aspect","dataKey","stroke","fill","strokeWidth","PureComponent","Component","RechartJs","lg","App","path","RegisterPatient","PatientDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","background","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.5b4235c2.chunk.js","sourcesContent":["\nexport const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\nexport const url = '/api/'\n//export const url =  'http://localhost:8282/api/';\n//export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjQ5Nzg2OTQwfQ.-STlJMa3CmdoFurnCbgdcSwt7E7fW_AH-nTvn-uD8t_zMRHUVXChCFpr5kRqP0LbHlvjDuRijNgwnpYHzMvtWQ';","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport MatButton from \"@material-ui/core/Button\";\nimport {\n\n  FormGroup,\n  Input,\n  Label,\n  FormFeedback,\n} from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Spinner } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n//import { FaArrowLeft } from \"react-icons/fa\";\nimport { TiArrowBack } from 'react-icons/ti'\nimport { url as baseUrl } from \"./../../../api\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { DateTimePicker } from \"react-widgets\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n      margin: theme.spacing(1)\n  },\n  error: {\n      color: \"#f85032\",\n      fontSize: \"12.8px\",\n  },\n}))\n\nconst UserRegistration = (props) => {\n  let history = useHistory();\n  const classes = useStyles();\n\n  const [values, setValues] = useState({address: \"\",dob: \"\",first_name: \"\",gender: \"\",last_name: \"\",mid_name: \"\",participant_id: \"\", phone: \"\",status:\"\" });\n  const [errors, setErrors] = useState({});\n  const [saving, setSaving] = useState(false);\n\n  const handleInputChange = e => {\n    setValues ({...values,  [e.target.name]: e.target.value});\n  }\n      /*****  Validation */\n      const validate = () => {\n        let temp = { ...errors };\n        temp.dob = values.dob\n            ? \"\"\n            : \"this field is required\";\n            temp.first_name = values.first_name\n            ? \"\"\n            : \"this field is required\";\n            temp.last_name = values.last_name\n            ? \"\"\n            : \"this field is required\";\n            temp.gender = values.gender\n            ? \"\"\n            : \"this field is required\";\n            temp.participant_id = values.participant_id\n            ? \"\"\n            : \"this field is required\";\n            setErrors({\n                ...temp,\n            });\n            return Object.values(temp).every((x) => x === \"\");\n        };\n\n        const handleSubmit = (e) => {\n          //console.log(values)\n          e.preventDefault();\n                if (validate()) {      \n                        setSaving(true);\n                        axios.post(`${baseUrl}covid/patients`,values,\n                         { headers: {\"Authorization\" : `Bearer ${token}`}},\n                        \n                        )\n                            .then(response => {\n                                setSaving(false);\n                                toast.success(\"Patient Register Successful\");\n                                history.push(\"/\")\n    \n                            })\n                            .catch(error => {\n                                setSaving(false);\n                                toast.error(\"Something went wrong\");\n                            });\n                };\n            }\n\n\n  return (\n    <>\n    <ToastContainer autoClose={3000} hideProgressBar />\n       \n        <Card className={classes.cardBottom}>\n        <CardContent>\n            <Link\n                  to ={{pathname: \"/\" }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                startIcon={<TiArrowBack />}\n              >\n                <span style={{ textTransform: \"capitalize\" }}>Back </span>\n              </Button>\n            </Link>\n            <br />\n          \n          <br />\n      <ToastContainer autoClose={3000} hideProgressBar />\n      \n      <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5 className=\"card-title\">Basic Information </h5>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form >\n                  <div className=\"row\">\n                \n                    <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"participant_id\">Patient ID * </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"participant_id\"\n                            id=\"participant_id\"\n                            onChange={handleInputChange}\n                            value={values.participant_id}\n                            required\n                          />\n                          {errors.participant_id !==\"\" ? (\n                            <span className={classes.error}>{errors.participant_id}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                      <Label for=\"first_name\">First Name *</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"first_name\"\n                        id=\"first_name\"\n                        onChange={handleInputChange}\n                        value={values.first_name}\n                        required\n                      />\n                      {errors.first_name !==\"\" ? (\n                            <span className={classes.error}>{errors.first_name}</span>\n                        ) : \"\" }\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                      <Label >Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"mid_name\"\n                        id=\"mid_name\"\n                        onChange={handleInputChange}\n                        value={values.mid_name}\n                        required\n                      />\n                      </FormGroup>\n                    </div>\n                    \n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                      <Label >Last Name *</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"last_name\"\n                        id=\"last_name\"\n                        onChange={handleInputChange}\n                        value={values.last_name}\n                        required\n                      />\n                      {errors.last_name !==\"\" ? (\n                            <span className={classes.error}>{errors.last_name}</span>\n                        ) : \"\" }\n                      </FormGroup>\n                    </div>\n                   </div>\n                   <div className=\"row\">\n                    <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label >Date of Birth*</Label>\n                          <DateTimePicker\n                              time={false}\n                              name=\"dateRegistration\"\n                              id=\"dateRegistration\"\n                              value={values.regDate}\n                              onChange={value1 =>\n                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\n                              }\n                              \n                                  max={new Date()}\n                          />\n                              {values.dob ===\"Invalid date\" ? (\n                                  <span className={classes.error}>{\"This field is required\"}</span>\n                              ) : \"\" }\n                              {errors.dob !==\"\" ? (\n                            <span className={classes.error}>{errors.dob}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label >Gender *</Label>\n                          <Input\n                            type=\"select\"\n                            name=\"gender\"\n                            id=\"gender\"\n                            value={values.gender}\n                            onChange={handleInputChange}\n                            required\n                            >\n                              <option value=\"\"> Please Select</option>\n                            <option value=\"1\"> Male</option>\n                            <option value=\"2\"> Female</option>\n                        </Input>\n                        {errors.gender !==\"\" ? (\n                            <span className={classes.error}>{errors.gender}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    \n                    <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label >Phone Number *</Label>\n                          <Input\n                            type=\"number\"\n                            name=\"phone\"\n                            id=\"phone\"\n                            onChange={handleInputChange}\n                            value={values.phone}\n                            required\n                          />\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label >Address</Label>\n                          <Input\n                            type=\"textarea\"\n                            name=\"address\"\n                            id=\"address\"\n                            onChange={handleInputChange}\n                            value={values.address}\n                            required\n                          />\n                        </FormGroup>\n                    </div>\n                   </div>\n                \n                  {saving ? <Spinner /> : \"\"}\n              <br />\n             \n                <MatButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<SaveIcon />}\n                onClick={handleSubmit}\n              >\n                {!saving ? (\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                ) : (\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                )}\n              </MatButton>\n              <Link\n                  to ={{pathname: \"/\" }}\n              >\n              <MatButton\n                variant=\"contained\"\n                className={classes.button}\n                startIcon={<CancelIcon />}\n                \n              >\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n              </MatButton>\n              </Link>\n                </form>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n        </CardContent>\n        </Card>\n    </>\n  );\n};\n\n\n\nexport default UserRegistration","import React, {useState, useEffect} from 'react';\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\nRow,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { ToastContainer, toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\n\nlet getAge =\"\"\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst Vaccination = (props) => {\n    console.log(props)\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n        }\n        \n        \n        const calculate_age = dob => {\n            var today = new Date();\n            var dateParts = dob.split(\"-\");\n            var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n            var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n            var age_now = today.getFullYear() - birthDate.getFullYear();\n            var m = today.getMonth() - birthDate.getMonth();\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                        age_now--;\n                    }\n                if (age_now === 0) {\n                        return m + \" month(s)\";\n                    }\n                    return age_now;\n            };\n\n    getAge=calculate_age(moment(patientObj.dob).format(\"DD-MM-YYYY\"))\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {\n        //console.log(values)\n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'VICCINATION'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          //objValues.visit_date= ''\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient Vaccination Successful\");\n                  props.toggle()\n                  props.loadPatients()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal isOpen={props.showModal} toggle={props.toggle} className={props.className} size=\"lg\">\n              <Form >\n             <ModalHeader toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>Vaccination </ModalHeader>\n                <ModalBody>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   {getAge>=5 ?\n                                   \n                                    (\n                                        <>\n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                   \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                         </>\n                                    )\n                                    :\n                                    (\n                                        <>\n                                            <p><h4>The Age is less than 5</h4></p>\n                                        </>\n                                    )\n\n                                    }\n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                              disabled={getAge<5?\"true\":\"\"}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </ModalBody>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Vaccination;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst VitalSigns = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [transferStatus, setTransferStatus] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patientstatus/current-status-codeset`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setTransferStatus(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        \n          objValues.patient_id= patientObj.id\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/patientstatus`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Transfer successful\");\n                  props.toggle()\n                  props.loadPatients()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                 Transfer - <b>{patientObj.first_name + \" \" + patientObj.last_name }</b>\n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                <FormGroup>\n                                    <Label >Transfer Status</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"current_status\"\n                                        id=\"current_status\"\n                                        value={objValues.current_status}\n                                        onChange={handleInputChange}\n                                        required\n                                        >\n                                        <option value=\"\"> Please Select</option>\n                                        \n                                            {transferStatus.map(({ name, id }) => (\n                                                <option key={id} value={id}>\n                                                {name}\n                                                </option>\n                                            ))}\n                                    </Input>\n                                    {/* {errors.gender !==\"\" ? (\n                                        <span className={classes.error}>{errors.gender}</span>\n                                    ) : \"\" } */}\n                                    </FormGroup>\n                                  </Row>\n                                    \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default VitalSigns;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst VitalSigns = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [transferStatus, setTransferStatus] = useState([])\n    const [objValues, setObjValues] = useState({patient_id: \"\",current_status:\"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patientstatus/current-status-codeset`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setTransferStatus(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        \n          objValues.patient_id= patientObj.id\n\n          setSaving(true);\n          axios.delete(`${baseUrl}covid/patients/${patientObj.id}`,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient delete successful\");\n                  props.toggle()\n                  props.loadPatients()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                 Delete Patient - <b>{patientObj.first_name + \" \" + patientObj.last_name }</b>\n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                    <p><b>Are you sure want to delete</b></p>\n                                </Row>                                    \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default VitalSigns;\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {  Card,CardBody,} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport {FaSyringe, FaUserEdit, FaShare, FaTrash} from \"react-icons/fa\";\nimport { MdDashboard } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from 'semantic-ui-react'\nimport Vaccination from './../Vaccination/AddViccination'\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport Transfer from './../Transfer/Transfer';\nimport DeletePatient from './../Patient/DeletePatient';\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst Patients = (props) => {\n    \n    const [patientList, setPatientList] = useState([])\n    const [patientObj, setpatientObj] = useState([])\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const [transferModal, setTransferModal] = useState(false);\n    const Transfertoggle = () => setTransferModal(!transferModal);\n    const [deleteModal, setDeleteModal] = useState(false);\n    const Deletetoggle = () => setDeleteModal(!deleteModal);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patients`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    console.log(response.data)\n                    setPatientList(response.data);\n                })\n                .catch((error) => {    \n                });        \n        }\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n        };\n\n    const loadVaccinationModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setModal(!modal)\n    }\n    const loadTransferModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setTransferModal(!transferModal)\n    }\n    const DeletePatientModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n        setDeleteModal(!deleteModal)\n    }\n    \n    const VaccinationStatusIcon = (patient)=>{\n        //patient.first_name + \" \"  + patient. last_name,\n        if(patient.vaccination_status===\"\"){\n            return (<><Icon name='dot circle outline' color=\"yellow\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Icon name='dot circle outline' color=\"blue\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Icon name='dot circle outline' color=\"green\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else {\n            return (<><Icon name='dot circle outline' color=\"red\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }\n    }\n    const VaccinationStatus = (patient)=>{\n        //console.log(patient)\n        if(patient.vaccination_status===null){\n            return (<><Label color=\"yellow\" size=\"mini\">Not Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Label color=\"teal\" size=\"mini\">Parlly Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Label color=\"green\" size=\"mini\">Fully Vaccinated</Label></> )\n        }else {\n            return \"\"\n        }\n    }\n    const CurrentStatus = (currentStatus)=>{\n        if(currentStatus===\"4\"){\n            return (<Label color=\"blue\" size=\"mini\">admitted</Label>);\n        }else if(currentStatus===\"5\"){\n            return (<Label color=\"olive\" size=\"mini\">ICU</Label>);\n        }else if(currentStatus===\"6\"){\n            return (<Label color=\"teal\" size=\"mini\">Discharge</Label>);\n        }else if(currentStatus===\"7\"){\n            return (<Label color=\"red\" size=\"mini\">Dead</Label>);\n        }else {\n            return   (<Label color=\"green\" size=\"mini\">Active</Label>);\n        }\n\n    }\n\n\n  return (\n    <div>\n       <Card>\n         <CardBody>\n\n         <Link to={\"register-patient\"} >\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n            </Button>\n            </Link>        \n        <br/><br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Find Patient \"\n              columns={[\n              // { title: \" ID\", field: \"Id\" },\n                {\n                  title: \"Patient Name\",\n                  field: \"name\",\n                },\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n                { title: \"Address\", field: \"address\", filtering: false },\n                { title: \"Phone Number\", field: \"phone_number\", filtering: false },\n                \n                { title: \"Age\", field: \"age\", filtering: false },\n                //{ title: \"Vaccination Status\", field: \"v_status\", filtering: false },\n                { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ patientList.map((row) => ({\n                  //Id: manager.id,\n                    name: VaccinationStatusIcon(row),\n                    hospital_number: row.participant_id,\n                    address: row.address,\n                    phone_number:  row.phone,\n                   \n                    age: (row.dob === 0 ||\n                        row.dob === undefined ||\n                        row.dob === null ||\n                        row.dob === \"\" )\n                          ? 0\n                          : calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n                    //v_status:  VaccinationStatus(row),\n                    status: CurrentStatus(row.current_status) \n                            ,\n                    actions:\n            \n                    <div>\n                    <Menu>\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\n                          Actions <span aria-hidden>▾</span>\n                        </MenuButton>\n                            <MenuList style={{ color:\"#000000 !important\"}} >\n                                <MenuItem  style={{ color:\"#000 !important\"}}>                      \n                                    <Link\n                                        to={{pathname: \"/patient-dashboard\", state: { patientObj: row  }}}>\n                                        <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\n                                  </Link>                               \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}}>\n                                        <Link\n                                            to={{\n                                              pathname: \"/edit-patient\",\n                                              state: { patientObj: row  }\n                                            }}>\n                                        <FaUserEdit size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Edit Patient</span>                   \n                                      </Link>\n                                  </MenuItem>                                      \n                                  <MenuItem style={{ color:\"#000 !important\"}}  onClick={() => loadTransferModal(row)}>\n                                     \n                                        <FaShare size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Transfer</span>\n                                                                    \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadVaccinationModal(row)}>\n                                     \n                                        <FaSyringe size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Vaccination</span>\n                                                                   \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => DeletePatientModal(row)}>\n                                     \n                                        <FaTrash size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Delete</span>\n                                                                   \n                                  </MenuItem>\n                                  \n                          </MenuList>\n                    </Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    \n        </CardBody>\n       </Card>\n      <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj} loadPatients={patients}/>\n      <Transfer  toggle={Transfertoggle} showModal={transferModal} patientObj={patientObj} loadPatients={patients}/>\n      <DeletePatient  toggle={Deletetoggle} showModal={deleteModal} patientObj={patientObj} loadPatients={patients}/>\n    </div>\n  );\n}\n\nexport default Patients;\n\n\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {  Card,CardBody,} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport {FaSyringe, FaUserEdit, FaShare} from \"react-icons/fa\";\nimport { MdDashboard } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from 'semantic-ui-react'\nimport Vaccination from './../Vaccination/AddViccination'\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport Transfer from './../Transfer/Transfer'\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst Patients = (props) => {\n    \n    const [patientList, setPatientList] = useState([])\n    const [patientObj, setpatientObj] = useState([])\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const [transferModal, setTransferModal] = useState(false);\n    const Transfertoggle = () => setTransferModal(!transferModal);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patients`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(response.data)\n                    setPatientList(response.data.filter((x)=> x.current_status===\"4\"));\n                })\n                .catch((error) => {    \n                });        \n        }\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n        };\n\n    const loadVaccinationModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setModal(!modal)\n    }\n    const loadTransferModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setTransferModal(!transferModal)\n    }\n    const VaccinationStatusIcon = (patient)=>{\n        //patient.first_name + \" \"  + patient. last_name,\n        if(patient.vaccination_status===\"\"){\n            return (<><Icon name='dot circle outline' color=\"yellow\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Icon name='dot circle outline' color=\"blue\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Icon name='dot circle outline' color=\"green\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else {\n            return (<><Icon name='dot circle outline' color=\"red\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }\n    }\n    const VaccinationStatus = (patient)=>{\n        //console.log(patient)\n        if(patient.vaccination_status===null){\n            return (<><Label color=\"yellow\" size=\"mini\">Not Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Label color=\"teal\" size=\"mini\">Parlly Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Label color=\"green\" size=\"mini\">Fully Vaccinated</Label></> )\n        }else {\n            return \"\"\n        }\n    }\n    const CurrentStatus = (currentStatus)=>{\n        if(currentStatus===\"4\"){\n            return (<Label color=\"blue\" size=\"mini\">admitted</Label>);\n        }else if(currentStatus===\"5\"){\n            return (<Label color=\"olive\" size=\"mini\">ICU</Label>);\n        }else if(currentStatus===\"6\"){\n            return (<Label color=\"teal\" size=\"mini\">Discharge</Label>);\n        }else if(currentStatus===\"7\"){\n            return (<Label color=\"red\" size=\"mini\">Dead</Label>);\n        }else {\n            return   (<Label color=\"green\" size=\"mini\">Active</Label>);\n        }\n\n    }\n\n   \n  return (\n    <div>\n       <Card>\n         <CardBody>\n\n         <Link to={\"register-patient\"} >\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n            </Button>\n            </Link>        \n        <br/><br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Find Patient \"\n              columns={[\n              // { title: \" ID\", field: \"Id\" },\n                {\n                  title: \"Patient Name\",\n                  field: \"name\",\n                },\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n                { title: \"Address\", field: \"address\", filtering: false },\n                { title: \"Phone Number\", field: \"phone_number\", filtering: false },\n                { title: \"DOB\", field: \"dob\", filtering: false },\n                { title: \"Age\", field: \"age\", filtering: false },\n                { title: \"Vaccination Status\", field: \"v_status\", filtering: false },\n                { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ patientList.map((row) => ({\n                  //Id: manager.id,\n                    name: VaccinationStatusIcon(row),\n                    hospital_number: row.participant_id,\n                    address: row.address,\n                    phone_number:  row.phone,\n                    dob:row.dob,\n                    age: (row.dob === 0 ||\n                        row.dob === undefined ||\n                        row.dob === null ||\n                        row.dob === \"\" )\n                          ? 0\n                          : calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n                    v_status:  VaccinationStatus(row),\n                    status: CurrentStatus(row.current_status) \n                            ,\n                    actions:\n            \n                    <div>\n                    <Menu>\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\n                          Actions <span aria-hidden>▾</span>\n                        </MenuButton>\n                            <MenuList style={{ color:\"#000000 !important\"}} >\n                                <MenuItem  style={{ color:\"#000 !important\"}}>                      \n                                    <Link\n                                        to={{pathname: \"/patient-dashboard\", state: { patientObj: row  }}}>\n                                        <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\n                                  </Link>                               \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}}>\n                                        <Link\n                                            to={{\n                                              pathname: \"/edit-patient\",\n                                              state: { patientObj: row  }\n                                            }}>\n                                        <FaUserEdit size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Edit Patient</span>                   \n                                      </Link>\n                                  </MenuItem>                                      \n                                  <MenuItem style={{ color:\"#000 !important\"}}  onClick={() => loadTransferModal(row)}>\n                                     \n                                        <FaShare size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Transfer</span>\n                                                                    \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadVaccinationModal(row)}>\n                                     \n                                        <FaSyringe size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Vaccination</span>\n                                                                   \n                                  </MenuItem>\n                                  \n                          </MenuList>\n                    </Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    \n        </CardBody>\n       </Card>\n      <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj} loadPatients={patients}/>\n      <Transfer  toggle={Transfertoggle} showModal={transferModal} patientObj={patientObj} loadPatients={patients}/>\n    </div>\n  );\n}\n\nexport default Patients;\n\n\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {  Card,CardBody,} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport {FaSyringe, FaUserEdit, FaShare} from \"react-icons/fa\";\nimport { MdDashboard } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from 'semantic-ui-react'\nimport Vaccination from './../Vaccination/AddViccination'\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport Transfer from './../Transfer/Transfer'\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst Patients = (props) => {\n    \n    const [patientList, setPatientList] = useState([])\n    const [patientObj, setpatientObj] = useState([])\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const [transferModal, setTransferModal] = useState(false);\n    const Transfertoggle = () => setTransferModal(!transferModal);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patients`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(response.data)\n                    setPatientList(response.data.filter((x)=> x.current_status===\"5\"));\n                })\n                .catch((error) => {    \n                });        \n        }\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n        };\n\n    const loadVaccinationModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setModal(!modal)\n    }\n    const loadTransferModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setTransferModal(!transferModal)\n    }\n    const VaccinationStatusIcon = (patient)=>{\n        //patient.first_name + \" \"  + patient. last_name,\n        if(patient.vaccination_status===\"\"){\n            return (<><Icon name='dot circle outline' color=\"yellow\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Icon name='dot circle outline' color=\"blue\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Icon name='dot circle outline' color=\"green\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else {\n            return (<><Icon name='dot circle outline' color=\"red\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }\n    }\n    const VaccinationStatus = (patient)=>{\n        //console.log(patient)\n        if(patient.vaccination_status===null){\n            return (<><Label color=\"yellow\" size=\"mini\">Not Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Label color=\"teal\" size=\"mini\">Parlly Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Label color=\"green\" size=\"mini\">Fully Vaccinated</Label></> )\n        }else {\n            return \"\"\n        }\n    }\n    const CurrentStatus = (currentStatus)=>{\n        if(currentStatus===\"4\"){\n            return (<Label color=\"blue\" size=\"mini\">admitted</Label>);\n        }else if(currentStatus===\"5\"){\n            return (<Label color=\"olive\" size=\"mini\">ICU</Label>);\n        }else if(currentStatus===\"6\"){\n            return (<Label color=\"teal\" size=\"mini\">Discharge</Label>);\n        }else if(currentStatus===\"7\"){\n            return (<Label color=\"red\" size=\"mini\">Dead</Label>);\n        }else {\n            return   (<Label color=\"green\" size=\"mini\">Active</Label>);\n        }\n\n    }\n\n\n  return (\n    <div>\n       <Card>\n         <CardBody>\n\n         <Link to={\"register-patient\"} >\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n            </Button>\n            </Link>        \n        <br/><br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Find ICU Patient \"\n              columns={[\n              // { title: \" ID\", field: \"Id\" },\n                {\n                  title: \"Patient Name\",\n                  field: \"name\",\n                },\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n                { title: \"Address\", field: \"address\", filtering: false },\n                { title: \"Phone Number\", field: \"phone_number\", filtering: false },\n               \n                { title: \"Age\", field: \"age\", filtering: false },\n                { title: \"Vaccination Status\", field: \"v_status\", filtering: false },\n                { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ patientList.map((row) => ({\n                  //Id: manager.id,\n                    name: VaccinationStatusIcon(row),\n                    hospital_number: row.participant_id,\n                    address: row.address,\n                    phone_number:  row.phone,\n                   \n                    age: (row.dob === 0 ||\n                        row.dob === undefined ||\n                        row.dob === null ||\n                        row.dob === \"\" )\n                          ? 0\n                          : calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n                    v_status:  VaccinationStatus(row),\n                    status: CurrentStatus(row.current_status) \n                            ,\n                    actions:\n            \n                    <div>\n                    <Menu>\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\n                          Actions <span aria-hidden>▾</span>\n                        </MenuButton>\n                            <MenuList style={{ color:\"#000000 !important\"}} >\n                                <MenuItem  style={{ color:\"#000 !important\"}}>                      \n                                    <Link\n                                        to={{pathname: \"/patient-dashboard\", state: { patientObj: row  }}}>\n                                        <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\n                                  </Link>                               \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}}>\n                                        <Link\n                                            to={{\n                                              pathname: \"/edit-patient\",\n                                              state: { patientObj: row  }\n                                            }}>\n                                        <FaUserEdit size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Edit Patient</span>                   \n                                      </Link>\n                                  </MenuItem>                                      \n                                  <MenuItem style={{ color:\"#000 !important\"}}  onClick={() => loadTransferModal(row)}>\n                                     \n                                        <FaShare size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Transfer</span>\n                                                                    \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadVaccinationModal(row)}>\n                                     \n                                        <FaSyringe size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Vaccination</span>\n                                                                   \n                                  </MenuItem>\n                                  \n                          </MenuList>\n                    </Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    \n        </CardBody>\n       </Card>\n      <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj} loadVaccinationaModal={loadVaccinationModal}/>\n      <Transfer  toggle={Transfertoggle} showModal={transferModal} patientObj={patientObj} />\n    </div>\n  );\n}\n\nexport default Patients;\n\n\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {  Card,CardBody,} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport {FaSyringe, FaUserEdit, FaShare} from \"react-icons/fa\";\nimport { MdDashboard } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from 'semantic-ui-react'\nimport Vaccination from './../Vaccination/AddViccination'\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport Transfer from './../Transfer/Transfer'\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst Patients = (props) => {\n    \n    const [patientList, setPatientList] = useState([])\n    const [patientObj, setpatientObj] = useState([])\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const [transferModal, setTransferModal] = useState(false);\n    const Transfertoggle = () => setTransferModal(!transferModal);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patients`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(response.data)\n                    setPatientList(response.data.filter((x)=> x.current_status===\"7\" || x.current_status===\"6\"));\n                })\n                .catch((error) => {    \n                });        \n        }\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n        };\n\n    const loadVaccinationModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setModal(!modal)\n    }\n    const loadTransferModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setTransferModal(!transferModal)\n    }\n    const VaccinationStatusIcon = (patient)=>{\n        //patient.first_name + \" \"  + patient. last_name,\n        if(patient.vaccination_status===\"\"){\n            return (<><Icon name='dot circle outline' color=\"yellow\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Icon name='dot circle outline' color=\"blue\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Icon name='dot circle outline' color=\"green\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else {\n            return (<><Icon name='dot circle outline' color=\"red\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }\n    }\n    const VaccinationStatus = (patient)=>{\n        //console.log(patient)\n        if(patient.vaccination_status===null){\n            return (<><Label color=\"yellow\" size=\"mini\">Not Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Label color=\"teal\" size=\"mini\">Parlly Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Label color=\"green\" size=\"mini\">Fully Vaccinated</Label></> )\n        }else {\n            return \"\"\n        }\n    }\n    const CurrentStatus = (currentStatus)=>{\n        if(currentStatus===\"4\"){\n            return (<Label color=\"blue\" size=\"mini\">admitted</Label>);\n        }else if(currentStatus===\"5\"){\n            return (<Label color=\"olive\" size=\"mini\">ICU</Label>);\n        }else if(currentStatus===\"6\"){\n            return (<Label color=\"teal\" size=\"mini\">Discharge</Label>);\n        }else if(currentStatus===\"7\"){\n            return (<Label color=\"red\" size=\"mini\">Dead</Label>);\n        }else {\n            return   (<Label color=\"green\" size=\"mini\">Active</Label>);\n        }\n\n    }\n\n\n  return (\n    <div>\n       <Card>\n         <CardBody>\n\n         <Link to={\"register-patient\"} >\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n            </Button>\n            </Link>        \n        <br/><br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Find Discharge/Dead Patient \"\n              columns={[\n              // { title: \" ID\", field: \"Id\" },\n                {\n                  title: \"Patient Name\",\n                  field: \"name\",\n                },\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n                { title: \"Address\", field: \"address\", filtering: false },\n                { title: \"Phone Number\", field: \"phone_number\", filtering: false },\n               \n                { title: \"Age\", field: \"age\", filtering: false },\n                { title: \"Vaccination Status\", field: \"v_status\", filtering: false },\n                { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ patientList.map((row) => ({\n                  //Id: manager.id,\n                    name: VaccinationStatusIcon(row),\n                    hospital_number: row.participant_id,\n                    address: row.address,\n                    phone_number:  row.phone,\n                    \n                    age: (row.dob === 0 ||\n                        row.dob === undefined ||\n                        row.dob === null ||\n                        row.dob === \"\" )\n                          ? 0\n                          : calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n                    v_status:  VaccinationStatus(row),\n                    status: CurrentStatus(row.current_status) \n                            ,\n                    actions:\n            \n                    <div>\n                    <Menu>\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\n                          Actions <span aria-hidden>▾</span>\n                        </MenuButton>\n                            <MenuList style={{ color:\"#000000 !important\"}} >\n                                <MenuItem  style={{ color:\"#000 !important\"}}>                      \n                                    <Link\n                                        to={{pathname: \"/patient-dashboard\", state: { patientObj: row  }}}>\n                                        <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\n                                  </Link>                               \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}}>\n                                        <Link\n                                            to={{\n                                              pathname: \"/edit-patient\",\n                                              state: { patientObj: row  }\n                                            }}>\n                                        <FaUserEdit size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Edit Patient</span>                   \n                                      </Link>\n                                  </MenuItem>                                      \n                                  <MenuItem style={{ color:\"#000 !important\"}}  onClick={() => loadTransferModal(row)}>\n                                     \n                                        <FaShare size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Transfer</span>\n                                                                    \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadVaccinationModal(row)}>\n                                     \n                                        <FaSyringe size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Vaccination</span>\n                                                                   \n                                  </MenuItem>\n                                  \n                          </MenuList>\n                    </Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    \n        </CardBody>\n       </Card>\n      <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj} loadPatients={patients}/>\n      <Transfer  toggle={Transfertoggle} showModal={transferModal} patientObj={patientObj} loadPatients={patients}/>\n    </div>\n  );\n}\n\nexport default Patients;\n\n\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {  Card,CardBody,} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport {FaSyringe, FaUserEdit, FaShare} from \"react-icons/fa\";\nimport { MdDashboard } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from 'semantic-ui-react'\nimport Vaccination from './../Vaccination/AddViccination'\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport Transfer from './../Transfer/Transfer'\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst Patients = (props) => {\n    \n    const [patientList, setPatientList] = useState([])\n    const [patientObj, setpatientObj] = useState([])\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const [transferModal, setTransferModal] = useState(false);\n    const Transfertoggle = () => setTransferModal(!transferModal);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patients`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(response.data)\n                    setPatientList(response.data.filter((x)=> x.vaccination_status!==null));\n                })\n                .catch((error) => {    \n                });        \n        }\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n        };\n\n    const loadVaccinationModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setModal(!modal)\n    }\n    const loadTransferModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setTransferModal(!transferModal)\n    }\n    const VaccinationStatusIcon = (patient)=>{\n        //patient.first_name + \" \"  + patient. last_name,\n        if(patient.vaccination_status===\"\"){\n            return (<><Icon name='dot circle outline' color=\"yellow\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Icon name='dot circle outline' color=\"blue\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Icon name='dot circle outline' color=\"green\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else {\n            return (<><Icon name='dot circle outline' color=\"red\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }\n    }\n    const VaccinationStatus = (patient)=>{\n        //console.log(patient)\n        if(patient.vaccination_status===null){\n            return (<><Label color=\"yellow\" size=\"mini\">Not Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Label color=\"teal\" size=\"mini\">Parlly Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Label color=\"green\" size=\"mini\">Fully Vaccinated</Label></> )\n        }else {\n            return \"\"\n        }\n    }\n    const CurrentStatus = (currentStatus)=>{\n        if(currentStatus===\"4\"){\n            return (<Label color=\"blue\" size=\"mini\">admitted</Label>);\n        }else if(currentStatus===\"5\"){\n            return (<Label color=\"olive\" size=\"mini\">ICU</Label>);\n        }else if(currentStatus===\"6\"){\n            return (<Label color=\"teal\" size=\"mini\">Discharge</Label>);\n        }else if(currentStatus===\"7\"){\n            return (<Label color=\"red\" size=\"mini\">Dead</Label>);\n        }else {\n            return   (<Label color=\"green\" size=\"mini\">Active</Label>);\n        }\n\n    }\n\n    console.log(patientList.filter((x)=> x.vaccination_status!==null))\n  return (\n    <div>\n       <Card>\n         <CardBody>\n\n         <Link to={\"register-patient\"} >\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n            </Button>\n            </Link>        \n        <br/><br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Find Vaccinated Patient \"\n              columns={[\n              // { title: \" ID\", field: \"Id\" },\n                {\n                  title: \"Patient Name\",\n                  field: \"name\",\n                },\n                { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n                { title: \"Address\", field: \"address\", filtering: false },\n                { title: \"Phone Number\", field: \"phone_number\", filtering: false },\n                // { title: \"DOB\", field: \"dob\", filtering: false },\n                { title: \"Age\", field: \"age\", filtering: false },\n                { title: \"Vaccination Status\", field: \"v_status\", filtering: false },\n                { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ patientList.map((row) => ({\n                  //Id: manager.id,\n                    name: VaccinationStatusIcon(row),\n                    hospital_number: row.participant_id,\n                    address: row.address,\n                    phone_number:  row.phone,\n                   \n                    age: (row.dob === 0 ||\n                        row.dob === undefined ||\n                        row.dob === null ||\n                        row.dob === \"\" )\n                          ? 0\n                          : calculate_age(moment(row.dob).format(\"DD-MM-YYYY\")),\n                    v_status:  VaccinationStatus(row),\n                    status: CurrentStatus(row.current_status) \n                            ,\n                    actions:\n            \n                    <div>\n                    <Menu>\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\n                          Actions <span aria-hidden>▾</span>\n                        </MenuButton>\n                            <MenuList style={{ color:\"#000000 !important\"}} >\n                                <MenuItem  style={{ color:\"#000 !important\"}}>                      \n                                    <Link\n                                        to={{pathname: \"/patient-dashboard\", state: { patientObj: row  }}}>\n                                        <MdDashboard size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Patient Dashboard</span>\n                                  </Link>                               \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}}>\n                                        <Link\n                                            to={{\n                                              pathname: \"/edit-patient\",\n                                              state: { patientObj: row  }\n                                            }}>\n                                        <FaUserEdit size=\"15\" color=\"black\" />{\" \"}<span style={{color: '#000'}}>Edit Patient</span>                   \n                                      </Link>\n                                  </MenuItem>                                      \n                                  <MenuItem style={{ color:\"#000 !important\"}}  onClick={() => loadTransferModal(row)}>\n                                     \n                                        <FaShare size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Transfer</span>\n                                                                    \n                                  </MenuItem>\n                                  <MenuItem style={{ color:\"#000 !important\"}} onClick={() => loadVaccinationModal(row)}>\n                                     \n                                        <FaSyringe size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>Vaccination</span>\n                                                                   \n                                  </MenuItem>\n                                  \n                          </MenuList>\n                    </Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    \n        </CardBody>\n       </Card>\n      <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj} loadPatients={patients}/>\n      <Transfer  toggle={Transfertoggle} showModal={transferModal} patientObj={patientObj} loadPatients={patients}/>\n    </div>\n  );\n}\n\nexport default Patients;\n\n\n","import React, {useState, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport Dashboard from './Patient/PatientList'\nimport AdmissionList from './Admission/AdmissionList'\nimport ICUList from './ICU/ICUList'\nimport DischargeDeathList from './DischargeDead/DischargeDeathList'\nimport VaccinationList from './Vaccination/VaccinationList'\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = () => {\n    const [key, setKey] = useState('home');\n\n\n  return (\n    <Fragment>\n     \n      <Row>\n       \n        <Col xl={12}>\n          <Card style={divStyle}>\n            \n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                    >\n                    <Tab eventKey=\"home\" title=\"Patients\">                   \n                      <Dashboard />\n                    </Tab>\n                    <Tab eventKey=\"vaccination\" title=\"Vaccination\">                   \n                      <VaccinationList />\n                    </Tab>\n                    <Tab eventKey=\"Admission\" title=\"Admission\">\n                      <AdmissionList />\n                    </Tab>\n                    <Tab eventKey=\"ICU\" title=\"ICU\">\n                      <ICUList />\n                    </Tab>\n                    <Tab eventKey=\"Discharge/Death\" title=\"Discharge/Death\">\n                      <DischargeDeathList />\n                    </Tab>\n                    </Tabs>\n\n\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport MatButton from \"@material-ui/core/Button\";\nimport {\n\n  FormGroup,\n  Input,\n  Label,\n  FormFeedback,\n} from \"reactstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { Spinner } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n//import { FaArrowLeft } from \"react-icons/fa\";\nimport { TiArrowBack } from 'react-icons/ti'\nimport { url as baseUrl } from \"./../../../api\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { DateTimePicker } from \"react-widgets\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n      margin: theme.spacing(1)\n  },\n  error: {\n      color: \"#f85032\",\n      fontSize: \"12.8px\",\n  },\n}))\n\nconst EditPatient = (props) => {\n   \n  let history = useHistory();\n  const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\n  const classes = useStyles();\n\n  const [values, setValues] = useState(history.location && history.location.state ? history.location.state.patientObj : {});\n  const [errors, setErrors] = useState({});\n  const [saving, setSaving] = useState(false);\n\n  useEffect(() => {\n    setValues(patientObj)\n  }, [history.location.state.patientObj]);\n  const handleInputChange = e => {\n    setValues ({...values,  [e.target.name]: e.target.value});\n  }\n  console.log(values)\n      /*****  Validation */\n      const validate = () => {\n        let temp = { ...errors };\n        temp.dob = values.dob\n            ? \"\"\n            : \"this field is required\";\n            temp.first_name = values.first_name\n            ? \"\"\n            : \"this field is required\";\n            temp.last_name = values.last_name\n            ? \"\"\n            : \"this field is required\";\n            temp.gender = values.gender\n            ? \"\"\n            : \"this field is required\";\n            temp.participant_id = values.participant_id\n            ? \"\"\n            : \"this field is required\";\n            setErrors({\n                ...temp,\n            });\n            return Object.values(temp).every((x) => x === \"\");\n        };\n\n        const handleSubmit = (e) => {\n          console.log(values)\n          e.preventDefault();\n                if (validate()) {      \n                        setSaving(true);\n                        axios.post(`${baseUrl}covid/patients`,values,\n                         { headers: {\"Authorization\" : `Bearer ${token}`}},\n                        \n                        )\n                            .then(response => {\n                                setSaving(false);\n                                toast.success(\"Patient Register Successful\");\n                                history.push(\"/\")\n    \n                            })\n                            .catch(error => {\n                                setSaving(false);\n                                toast.error(\"Something went wrong\");\n                            });\n                };\n            }\n\n\n  return (\n    <>\n    <ToastContainer autoClose={3000} hideProgressBar />\n       \n        <Card className={classes.cardBottom}>\n        <CardContent>\n            <Link\n                  to ={{pathname: \"/\" }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-right ms-1\"\n                startIcon={<TiArrowBack />}\n              >\n                <span style={{ textTransform: \"capitalize\" }}>Back </span>\n              </Button>\n            </Link>\n            <br />\n          \n          <br />\n      <ToastContainer autoClose={3000} hideProgressBar />\n      \n      <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5 className=\"card-title\">Basic Information </h5>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"basic-form\">\n                <form >\n                  <div className=\"row\">\n                \n                    <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label for=\"participant_id\">Patient ID * </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"participant_id\"\n                            id=\"participant_id\"\n                            onChange={handleInputChange}\n                            value={values.participant_id}\n                            required\n                          />\n                          {errors.participant_id !==\"\" ? (\n                            <span className={classes.error}>{errors.participant_id}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                      <Label for=\"first_name\">First Name *</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"first_name\"\n                        id=\"first_name\"\n                        onChange={handleInputChange}\n                        value={values.first_name}\n                        required\n                      />\n                      {errors.first_name !==\"\" ? (\n                            <span className={classes.error}>{errors.first_name}</span>\n                        ) : \"\" }\n                      </FormGroup>\n                    </div>\n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                      <Label >Middle Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"mid_name\"\n                        id=\"mid_name\"\n                        onChange={handleInputChange}\n                        value={values.mid_name}\n                        required\n                      />\n                      </FormGroup>\n                    </div>\n                    \n                    <div className=\"form-group mb-3 col-md-4\">\n                      <FormGroup>\n                      <Label >Last Name *</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"last_name\"\n                        id=\"last_name\"\n                        onChange={handleInputChange}\n                        value={values.last_name}\n                        required\n                      />\n                      {errors.last_name !==\"\" ? (\n                            <span className={classes.error}>{errors.last_name}</span>\n                        ) : \"\" }\n                      </FormGroup>\n                    </div>\n                   </div>\n                   <div className=\"row\">\n                    <div className=\"form-group mb-3 col-md-4\">\n                        <FormGroup>\n                          <Label >Date of Birth*</Label>\n                          <DateTimePicker\n                              time={false}\n                              name=\"dateRegistration\"\n                              id=\"dateRegistration\"\n                              value={values.regDate}\n                              onChange={value1 =>\n                                setValues({ ...values, dob: moment(value1).format(\"YYYY-MM-DD\") })\n                              }\n                              defaultValue={new Date(new Date(moment(values.dob, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\") ))}\n                                  max={new Date()}\n                          />\n                              {values.dob ===\"Invalid date\" ? (\n                                  <span className={classes.error}>{\"This field is required\"}</span>\n                              ) : \"\" }\n                              {errors.dob !==\"\" ? (\n                            <span className={classes.error}>{errors.dob}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label >Gender *</Label>\n                          <Input\n                            type=\"select\"\n                            name=\"gender\"\n                            id=\"gender\"\n                            value={values.gender}\n                            onChange={handleInputChange}\n                            required\n                            >\n                              <option value=\"\"> Please Select</option>\n                            <option value=\"1\"> Male</option>\n                            <option value=\"2\"> Female</option>\n                        </Input>\n                        {errors.gender !==\"\" ? (\n                            <span className={classes.error}>{errors.gender}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    \n                    <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label >Phone Number *</Label>\n                          <Input\n                            type=\"number\"\n                            name=\"phone\"\n                            id=\"phone\"\n                            onChange={handleInputChange}\n                            value={values.phone}\n                            required\n                          />\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group  col-md-4\">\n                        <FormGroup>\n                          <Label >Address</Label>\n                          <Input\n                            type=\"textarea\"\n                            name=\"address\"\n                            id=\"address\"\n                            onChange={handleInputChange}\n                            value={values.address}\n                            required\n                          />\n                        </FormGroup>\n                    </div>\n                   </div>\n                \n                  {saving ? <Spinner /> : \"\"}\n              <br />\n             \n                <MatButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<SaveIcon />}\n                onClick={handleSubmit}\n              >\n                {!saving ? (\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                ) : (\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                )}\n              </MatButton>\n              <Link\n                  to ={{pathname: \"/\" }}\n              >\n              <MatButton\n                variant=\"contained\"\n                className={classes.button}\n                startIcon={<CancelIcon />}\n                \n              >\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n              </MatButton>\n              </Link>\n                </form>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n        </CardContent>\n        </Card>\n    </>\n  );\n};\n\n\n\nexport default EditPatient","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from 'semantic-ui-react';\nimport { Grid, Step, Label, Segment, Icon } from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Col, Row } from \"reactstrap\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport Transfer from './../Transfer/Transfer'\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nfunction PatientCard(props) {\n  const { classes } = props;\n  const patientObj = props.patientObj ? props.patientObj : {}\n  const [transferModal, setTransferModal] = useState(false);\n    const Transfertoggle = () => setTransferModal(!transferModal);\n    const calculate_age = dob => {\n    var today = new Date();\n    var dateParts = dob.split(\"-\");\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n    var age_now = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                age_now--;\n            }\n        if (age_now === 0) {\n                return m + \" month(s)\";\n            }\n            return age_now + \" year(s)\";\n    };\n    const loadTransferModal =()=> {\n      //setpatientObj({...patientObj, ...row});\n          setTransferModal(!transferModal)\n  }\n\n  const CurrentStatus = (currentStatus)=>{\n    if(currentStatus===\"4\"){\n        return (<Label color=\"blue\" size=\"mini\">Current Status: <b>Admitted</b></Label>);\n    }else if(currentStatus===\"5\"){\n        return (<Label color=\"olive\" size=\"mini\">Current Status: <b>ICU</b></Label>);\n    }else if(currentStatus===\"6\"){\n        return (<Label color=\"teal\" size=\"mini\">Current Status: <b>Discharge</b></Label>);\n    }else if(currentStatus===\"7\"){\n        return (<Label color=\"red\" size=\"mini\">Current Status: <b>Dead</b></Label>);\n    }else {\n        return   (<Label color=\"green\" size=\"mini\">Current Status: <b>Active</b></Label>);\n    }\n\n}\n\nconst VaccinationStatus = (patient)=>{\n    //console.log(patient)\n    if(patient.vaccination_status===null){\n        return (<><Label color=\"yellow\" size=\"mini\">Vaccination Status: Not Vaccinated</Label></> )\n    }else if(patient.vaccination_status===\"1\"){\n        return (<><Label color=\"teal\" size=\"mini\">Vaccination Status: Partially Vaccinated</Label></> )\n    }else if(patient.vaccination_status===\"2\"){\n        return (<><Label color=\"green\" size=\"mini\">Vaccination Status: Fully Vaccinated</Label></> )\n    }else {\n        return \"\"\n    }\n}\n\n  \n  return (\n    <div className={classes.root}>\n       <ExpansionPanel defaultExpanded>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                \n                <Row>\n                    \n                    <Col md={11}>\n                    <Row className={\"mt-1\"}>\n                    <Col md={12} className={classes.root2}>\n                        <b style={{fontSize: \"25px\"}}>\n                        {patientObj.first_name + \" \" + patientObj.last_name }\n                        </b>\n                        \n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Patient ID : <b>{patientObj.participant_id }</b>\n                    </span>\n                    </Col>\n\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        Date Of Birth : <b>{patientObj.dob }</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Age : <b>{calculate_age(moment(patientObj.dob).format(\"YYYY-MM-DD\"))}</b>\n                    </span>\n                    </Col>\n                    <Col md={4}>\n                    <span>\n                        {\" \"}\n                        Gender :{\" \"}\n                        <b>{patientObj.gender===1?\"Male\": \"Female\" }</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Phone Number : <b>{patientObj.phone }</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Address : <b>{patientObj.address } </b>\n                    </span>\n                    </Col>\n\n                    <Col md={12}>\n                    {\n                        //VaccinationStatus(patientObj)\n                    }\n                    {CurrentStatus(patientObj.current_status)}\n                    \n                    </Col>\n                    </Row>\n                    </Col>\n                </Row>\n            \n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.details}>\n                <div className={classes.column} >\n                    <Button\n                            color='red'\n                            content='BloodType'\n                            //icon='heart'\n                            label={{ basic: true, color: 'red', pointing: 'left', content: 'AB+' }}\n                            />\n                            \n                    </div>\n                <div className={classes.column}>\n                <Button\n                            basic\n                            color='blue'\n                            content='Height'\n                            icon='fork'\n                            label={{\n                                as: 'a',\n                                basic: true,\n                                color: 'blue',\n                                pointing: 'left',\n                                content: '74.5 in',\n                            }}\n                            />\n                </div>\n                <div className={classes.column}>\n                <Button\n                            basic\n                            color='blue'\n                            content='Weight'\n                            icon='fork'\n                            label={{\n                                as: 'a',\n                                basic: true,\n                                color: 'blue',\n                                pointing: 'left',\n                                content: '74.5 in',\n                            }}\n                            />\n                </div>\n                <div className={classNames(classes.column, classes.helper)}>\n                    <Typography variant=\"caption\">\n                    {/* <Label color={\"blue\"} size={\"tiny\"} onClick={() => loadTransferModal()} style={{cursor:\"pointer\"}}>\n                        Transfer\n                        \n                    </Label> */}\n                   \n                    </Typography>\n                </div>\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions expandIcon={<ExpandMoreIcon />}>\n                \n                </ExpansionPanelActions>\n            </ExpansionPanel>\n            {/* <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj}/> */}\n            <Transfer  toggle={Transfertoggle} showModal={transferModal} patientObj={patientObj} />\n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst InclusionCriteria = (props) => {\n    \n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/INCLUSION_CRITERIA`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'INCLUSION_CRITERIA'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient record save successful\");\n                  props.getInclusionHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                 Inclusion Criteria \n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default InclusionCriteria;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst Demograhic = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/DEMOGRAPHICS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'DEMOGRAPHICS'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient Demographics Save Successful\");\n                  props.getDemographicHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                 Demograhics \n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Demograhic;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst Viccination = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/VACCINATION_STATUS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'VACCINATION_STATUS'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient Record Save Successful\");\n                  props.getVaccinationHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                 Vaccination Status\n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Viccination;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst Commorbitie = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/COMORBIDITIES`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'COMORBIDITIES'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Record save successful\");\n                  props.getComobitieHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                 Co-morbidities\n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Commorbitie;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst VitalSigns = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/ADMISSION_VITAL_SIGNS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'ADMISSION_VITAL_SIGNS'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Record save successful\");\n                  props.getVitalsHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                 Admission Vital Signs\n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default VitalSigns;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst ReInfection = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'REINFECTION'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Record save successful\");\n                  props.toggle()\n                  props.getReinfectionHistory()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                Reinfection \n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ReInfection;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst ChronicMedication = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/CHRONIC_MEDICATION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'CHRONIC_MEDICATION'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient Inclusion Criteria Successful\");\n                  props.getChronicMedicationHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                Chronic Medication \n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChronicMedication;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"../../../api\";\nimport { token as token } from \"../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst Medication = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/MEDICATION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'MEDICATION'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient Inclusion Criteria Successful\");\n                  props.toggle()\n                  props.getMedicationHistory()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                Medication \n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Medication;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst SignsSymptons = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/SIGNS_AND_SYMPTOMS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'SIGNS_AND_SYMPTOMS'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient Inclusion Criteria Successful\");\n                  props.getSignsSymptomsHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                Signs and Symptoms \n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default SignsSymptons;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst SupportiveCare = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [vaccination, setVaccination] = useState([])\n    const [values, setValues] = useState([]);\n    const [objValues, setObjValues] = useState({category: \"\",patient_id: \"\",location: \"\",questionAnswers: \"\",visit_date: \"\"});\n    const [saving, setSaving] = useState(false);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/questions-by-category/REINFECTION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    \n                    setVaccination(response.data);\n                    //setValues(response.data)\n                })\n                .catch((error) => {    \n                });        \n        }\n        const handleInputChange = e => {\n            setValues ({...values,  [e.target.name]: e.target.value});\n          }\n          \n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        const obj = (Object.entries(values).map(([key, value]) => ({\n            question_id: key,\n            answer: value,\n          })))\n          objValues.category= 'REINFECTION'\n          objValues.patient_id= patientObj.id\n          objValues.questionAnswers =obj\n          objValues.visit_date= moment(new Date()).format(\"YYYY-MM-DD\")\n\n          setSaving(true);\n          axios.post(`${baseUrl}covid/encounters`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Patient Inclusion Criteria Successful\");\n                  props.getSupportiveCareHistory()\n                  props.toggle()\n                  //history.push(\"/\")\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n      <div >\n         \n              <Modal show={props.showModal} toggle={props.toggle} className=\"fade\" size=\"lg\">\n              <Form >\n             <Modal.Header toggle={props.toggle} style={{backgroundColor:\"#eeeeee\"}}>\n                Supportive Care \n                 <Button\n                    variant=\"\"\n                    className=\"btn-close\"\n                    onClick={props.toggle}\n                ></Button>\n            </Modal.Header>\n                <Modal.Body>\n                    \n                        <Card >\n                            <CardBody>\n                                <Row >\n                                   \n                                 \n                                        {vaccination.map((value) => (\n                                            <>\n                                                <div className=\"form-group mb-3 col-md-6\">\n                                                <FormGroup>\n                                                    <Label for=\"role\">{value.name}</Label>\n                                                    {value.datatype===\"date\"?\n                                                        (\n                                                            <Input\n                                                            type=\"date\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"number\"?\n                                                        (\n                                                            <Input\n                                                            type=\"number\"\n                                                            name={value.id}\n                                                            id={value.id}\n                                                            //value={value.name}\n                                                            onChange={handleInputChange}\n                                                            required\n                                                            >\n                                                            \n                                                        </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"select\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        {value.datatype===\"checkbox\"?\n                                                        (\n                                                            <Input\n                                                                type=\"select\"\n                                                                name={value.id}\n                                                                id={value.id}\n                                                                //value={values.name}\n                                                                onChange={handleInputChange}\n                                                                required\n                                                                >\n                                                                <option value=\"\"> </option>\n                                                                {value.responses.map(({ name, id }) => (\n                                                                    <option key={id} value={id}>\n                                                                    {name}\n                                                                    </option>\n                                                                ))}\n                                                            </Input>\n                                                        )\n                                                            :\n                                                            \" \"\n                                                        }\n                                                        \n                                                        \n                                                </FormGroup>\n                                            \n                                            </div>\n                                            </>\n                                        \n                                        ))}\n                                        \n                                             \n                                  </Row>\n                                      <br/>\n                                      \n                                      <br/>\n                                      \n                                          <MatButton\n                                              type='submit'\n                                              variant='contained'\n                                              color='primary'\n                                              className={classes.button}\n                                              startIcon={<SaveIcon />}\n                                              onClick={handleSubmit}\n                                             \n                                          >   \n                                              Save \n                                          </MatButton>\n                                           \n                                          <MatButton\n                                              variant='contained'\n                                              color='default'\n                                             onClick={props.toggle}\n                                              className={classes.button}\n                                              startIcon={<CancelIcon />}\n                                          >\n                                              cancel\n                                          </MatButton>\n                            </CardBody>\n                        </Card> \n                    </Modal.Body>\n        \n                </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default SupportiveCare;\n","import React,{useState, useEffect} from 'react';\n//import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n//import { Link } from 'react-router-dom'\n//import ButtonMui from \"@material-ui/core/Button\";\nimport 'semantic-ui-css/semantic.min.css';\nimport axios from \"axios\";\n\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { Grid,  Label, Segment, Icon, List, Button, Image } from \"semantic-ui-react\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport { useHistory } from \"react-router-dom\";\n//import {  Button } from \"react-bootstrap\";\nimport InclusionCriteria from './InclusionCriteria';\nimport Demographic from './Demograhic';\nimport Viccination from './Vaccination';\nimport  Comorbitie from './Comorbitie';\nimport  VitalSign from './VitalSign';\nimport  ReInfection from './ReInfection';\nimport ChronicMedication from './ChronicMedication';\nimport  Medication from './Medication';\nimport  SignsSymptoms from './SignsSymptons';\nimport  SupportiveCare from './SupportiveCare';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nlet resultData=\"\"\n\nfunction AddmissionHome(props) {\n    let history = useHistory();\n    const { classes } = props;\n    const patientObjValue = history.location && history.location.state ? history.location.state.patientObj : {}\n    const [patientObj, setpatientObj] = useState(patientObjValue)\n    const [inclusionCriteriaModal, setInclusionCriteriaModal] = useState(false);\n    const inclusionCriteriaToggle = () => setInclusionCriteriaModal(!inclusionCriteriaModal);\n    const [demographicModal, setDemographicModal] = useState(false);\n    const demographicToggle = () => setDemographicModal(!demographicModal);\n    const [viccinationModal, setViccinationModal] = useState(false);\n    const ViccinationToggle = () => setViccinationModal(!viccinationModal);\n    const [comorbitieModal, setComorbitieModal] = useState(false);\n    const ComorbitieToggle = () => setComorbitieModal(!comorbitieModal);\n    const [vitalSignModal, setVitalSignModal] = useState(false);\n    const VitalSignToggle = () => setVitalSignModal(!vitalSignModal);\n    const [reInfectionModal, setReinfectionModal] = useState(false);\n    const ReinfectionToggle = () => setReinfectionModal(!reInfectionModal);\n    const [signsSymptomsModal, setSignsSymptomsModal] = useState(false);\n    const SignsSymptomsToggle = () => setSignsSymptomsModal(!signsSymptomsModal);\n    const [medicationModal, setMedicationModal] = useState(false);\n    const MedicationToggle = () => setMedicationModal(!medicationModal);\n    const [chronicMedicationModal, setChronicMedicationModal] = useState(false);\n    const ChronicMedicationToggle = () => setChronicMedicationModal(!chronicMedicationModal);\n    const [supportiveCareModal, setSupportiveCareModal] = useState(false);\n    const SupportiveCareToggle = () => setSupportiveCareModal(!supportiveCareModal);\n    const [vaccinationHistory, setVaccinationHistory] = useState([])\n    const [inclusionHistory, setInclusionHistory] = useState([])\n    const [demograhicHistory, setDemographicHistory] = useState([])\n    const [vitalHistory, setVitalHistory] = useState([])\n    const [comobitieHistory, setComobitieHistory] = useState([])\n    const [reinfectionHistory, setReinfectionHistory] = useState([])\n    const [signsSymptomsHistory, setSignsSymptomsHistory] = useState([])\n    const [chronicMedicationHistory, setChronicMedicationHistory] = useState([])\n    const [medicationHistory, setMedicationHistory] = useState([])\n    const [supportiveCarenHistory, setSupportiveCareHistory] = useState([])\n\n    const loadInclusionCriteriaModal =()=> {\n          setInclusionCriteriaModal(!inclusionCriteriaModal)\n    }\n    const DemographicModal =()=> {\n      setDemographicModal(!demographicModal)\n    }\n    const ViccinationModal =()=> {\n      setViccinationModal(!viccinationModal)\n    }\n    const VitalSignModal =()=> {\n      setVitalSignModal(!vitalSignModal)\n    }\n    const ComorbitieModal =()=> {\n      setComorbitieModal(!comorbitieModal)\n    }\n    const ReInfectionModal =()=> {\n      setReinfectionModal(!reInfectionModal)\n    }\n    const SignsSymptomsModal =()=> {\n      setSignsSymptomsModal(!signsSymptomsModal)\n    }\n    const ChronicMedicationModal =()=> {\n      setChronicMedicationModal(!chronicMedicationModal)\n    }\n    const MedicationModal =()=> {\n      setMedicationModal(!medicationModal)\n    }\n    const SupportiveCareModal =()=> {\n      setSupportiveCareModal(!supportiveCareModal)\n    }\n    useEffect(() => {\n        getVaccinationHistory()\n        getInclusionHistory()\n        getDemographicHistory()\n        getVitalsHistory()\n        getComobitieHistory()\n        getReinfectionHistory()\n        getSignsSymptomsHistory()\n        getChronicMedicationHistory()\n        getMedicationHistory()\n        getSupportiveCareHistory()\n    },[])\n    const getVaccinationHistory = (category) => {\n      axios\n        .get(`${baseUrl}covid/encounters/${patientObj.id}/VACCINATION_STATUS`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setVaccinationHistory(response.data)\n        })\n        .catch((error) => {    \n        }); \n        //return resultData\n    }\n    const getInclusionHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/INCLUSION_CRITERIA`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setInclusionHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getDemographicHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/DEMOGRAPHICS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setDemographicHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getVitalsHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/ADMISSION_VITAL_SIGNS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setVitalHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getComobitieHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/COMORBIDITIES`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setComobitieHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getReinfectionHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/REINFECTION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setReinfectionHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getChronicMedicationHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/CHRONIC_MEDICATION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setChronicMedicationHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getSignsSymptomsHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SIGNS_AND_SYMPTOMS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSignsSymptomsHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getMedicationHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/MEDICATION`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setMedicationHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n    const getSupportiveCareHistory = () => {\n        axios\n            .get(`${baseUrl}covid/encounters/${patientObj.id}/SUPPORTIVE_CARE`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSupportiveCareHistory(response.data)\n            })\n            .catch((error) => {\n            });\n        //return resultData\n    }\n\n  return (\n    <div className={classes.root}>\n      <Card >\n        <CardContent>\n       \n            {/* Sematic Ui Card */}\n            <Grid centered columns={2} padded>\n                <Grid.Column>\n                <Segment raised>\n                <Label as='a' color='blue'  ribbon>\n                        INCLUSION CRITERIA \n                        \n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() =>loadInclusionCriteriaModal()}/>\n                    <List divided verticalAlign='middle'>\n                    {inclusionHistory!==\"\" && inclusionHistory.map((value) => (\n                          <>\n                            <List.Item>\n                              <List.Content floated='right'>\n                              <Label>\n                                View\n                              </Label>\n                              </List.Content>\n                              <Icon name='info circle'  />\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                            </List.Item>\n                          </>\n                    ))\n                    }\n                    </List>\n                </Segment>\n                </Grid.Column>\n\n                <Grid.Column>\n                <Segment>\n                    <Label as='a' color='orange' ribbon='left'>\n                        DEMOGRAPHICS \n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => DemographicModal()}/>\n                        <List divided verticalAlign='middle'>\n                            {demograhicHistory!==\"\" && demograhicHistory.map((value) => (\n                                <>\n                                <List.Item>\n                                <List.Content floated='right'>\n                            <Label>\n                            View\n                            </Label>\n                            </List.Content>\n                            <Icon name='info circle'  />\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                        </List.Item>\n                        </>\n                    ))\n                    }\n                    </List>\n                </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                <Segment raised>\n                    <Label as='a' color='brown' ribbon>\n                    VACCINATION \n                    </Label>\n                        <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ViccinationModal()}/>\n                            <List divided verticalAlign='middle'>\n                                {vaccinationHistory!==\"\" && vaccinationHistory.map((value) => (\n                                    <>\n                                    <List.Item>\n                                    <List.Content floated='right'>\n                                <Label>\n                                View\n                                </Label>\n                                </List.Content>\n                                <Icon name='info circle'  />\n                                <List.Content>Date Vaccinated   {\"  \" +value.visit_date}</List.Content>\n                                </List.Item>\n                                </>\n                        ))\n                        }\n                        </List>\n                </Segment>\n                </Grid.Column>\n\n                <Grid.Column>\n                <Segment>\n                    <Label as='a' color='pink' ribbon='left'>\n                        VITAL SIGNS \n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => VitalSignModal()}/>\n                        <List divided verticalAlign='middle'>\n                                {vitalHistory!==\"\" && vitalHistory.map((value) => (\n                                    <>\n                                    <List.Item>\n                                    <List.Content floated='right'>\n                                    <Label>\n                                    View\n                                    </Label>\n                                </List.Content>\n                                <Icon name='info circle'  />\n                                <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                                </List.Item>\n                                </>\n                            ))\n                            }\n                        </List>\n                </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                <Segment raised>\n                    <Label as='a' color='purple' ribbon>\n                    CO-MORBIDITIES\n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ComorbitieModal()}/>\n                        <List divided verticalAlign='middle'>\n                            {comobitieHistory!==\"\" && comobitieHistory.map((value) => (\n                                <>\n                                <List.Item>\n                                <List.Content floated='right'>\n                            <Label>\n                            View\n                            </Label>\n                            </List.Content>\n                            <Icon name='info circle'  />\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                            </List.Item>\n                            </>\n                            ))\n                            }\n                        </List>\n                </Segment>\n                </Grid.Column>\n\n                <Grid.Column>\n                <Segment>\n                    <Label as='a' color='violet' ribbon='left'>\n                    REINFECTION\n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ReInfectionModal()}/>\n                        <List divided verticalAlign='middle'>\n                            {reinfectionHistory!==\"\" && reinfectionHistory.map((value) => (\n                                <>\n                                <List.Item>\n                                <List.Content floated='right'>\n                            <Label>\n                            View\n                            </Label>\n                            </List.Content>\n                            <Icon name='info circle'  />\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                        </List.Item>\n                        </>\n                        ))\n                        }\n                        </List>\n                </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                <Segment raised>\n                    <Label as='a' color='teal' ribbon>\n                    SIGNS AND SYMPTOMS\n                   \n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => SignsSymptomsModal()}/>\n                        <List divided verticalAlign='middle'>\n                            {signsSymptomsHistory!==\"\" && signsSymptomsHistory.map((value) => (\n                                <>\n                                <List.Item>\n                                <List.Content floated='right'>\n                            <Label>\n                            View\n                            </Label>\n                            </List.Content>\n                            <Icon name='info circle'  />\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                        </List.Item>\n                        </>\n                    ))\n                    }\n                    </List>\n                </Segment>\n                </Grid.Column>\n\n                <Grid.Column>\n                <Segment>\n                    <Label as='a' color='green' ribbon='left'>\n                    CHRONIC MEDICATION \n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => ChronicMedicationModal()}/>\n                        <List divided verticalAlign='middle'>\n                            {chronicMedicationHistory!==\"\" && chronicMedicationHistory.map((value) => (\n                                <>\n                                <List.Item>\n                                <List.Content floated='right'>\n                            <Label>\n                            View\n                            </Label>\n                            </List.Content>\n                            <Icon name='info circle'  />\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                        </List.Item>\n                        </>\n                    ))\n                    }\n                    </List>\n                </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                <Segment raised>\n                    <Label as='a' color='olive' ribbon>\n                    MEDICATION  \n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\" style={{cursor: 'pointer'}} onClick={() => MedicationModal()}/>\n                        <List divided verticalAlign='middle'>\n                            {medicationHistory!==\"\" && medicationHistory.map((value) => (\n                                <>\n                                <List.Item>\n                                <List.Content floated='right'>\n                            <Label>\n                            View\n                            </Label>\n                            </List.Content>\n                            <Icon name='info circle'  />\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                        </List.Item>\n                        </>\n                    ))\n                    }\n                    </List>\n                </Segment>\n                </Grid.Column>\n\n                <Grid.Column>\n                <Segment>\n                    <Label as='a' color='yellow' ribbon='left'>\n                    SUPPORTIVE CARE \n                    </Label>\n                    <Icon name='plus' size='small' className=\" float-end ms-1\"  style={{cursor: 'pointer'}} onClick={() => SupportiveCareModal()}/>\n                        <List divided verticalAlign='middle'>\n                            {supportiveCarenHistory!==\"\" && supportiveCarenHistory.map((value) => (\n                                <>\n                                <List.Item>\n                                <List.Content floated='right'>\n                            <Label>\n                            View\n                            </Label>\n                            </List.Content>\n                            <Icon name='info circle'  />\n                            <List.Content>Encounter Date   {\"  \" +value.visit_date}</List.Content>\n                        </List.Item>\n                        </>\n                    ))\n                    }\n                    </List>\n                </Segment>\n                </Grid.Column>\n            </Grid>\n\n         </CardContent>\n      </Card>\n\n      <InclusionCriteria toggle={inclusionCriteriaToggle} showModal={inclusionCriteriaModal} patientObj={patientObj} getInclusionHistory={getInclusionHistory}/>\n      <Demographic toggle={demographicToggle} showModal={demographicModal} patientObj={patientObj} getDemographicHistory={getDemographicHistory}/>\n      <Viccination toggle={ViccinationToggle} showModal={viccinationModal} patientObj={patientObj} getVaccinationHistory={getVaccinationHistory}/>\n      <VitalSign toggle={VitalSignToggle} showModal={vitalSignModal} patientObj={patientObj} getVitalsHistory={getVitalsHistory}/>\n      <Comorbitie toggle={ComorbitieToggle} showModal={comorbitieModal} patientObj={patientObj} getComobitieHistory={getComobitieHistory}/>\n      <ReInfection toggle={ReinfectionToggle} showModal={reInfectionModal} patientObj={patientObj} getReinfectionHistory={getReinfectionHistory}/>\n      <ChronicMedication toggle={ChronicMedicationToggle} showModal={chronicMedicationModal} patientObj={patientObj} getChronicMedicationHistory={getChronicMedicationHistory}/>\n      <Medication toggle={MedicationToggle} showModal={medicationModal} patientObj={patientObj} getMedicationHistory={getMedicationHistory} />\n      <SignsSymptoms toggle={SignsSymptomsToggle} showModal={signsSymptomsModal} patientObj={patientObj} getSignsSymptomsHistory={getSignsSymptomsHistory}/>\n      <SupportiveCare toggle={SupportiveCareToggle} showModal={supportiveCareModal} patientObj={patientObj} getSupportiveCareHistory={getSupportiveCareHistory} />\n    </div>\n  );\n}\n\n\n\nexport default withStyles(styles)(AddmissionHome);\n","import React, { PureComponent } from \"react\";\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 1000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  render() {\n    return (\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\n        <AreaChart data={data}>\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"uv\"\n            stroke=\"#0E8A74\"\n            fill=\"#0E8A74\"\n            strokeWidth={2}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 1000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  render() {\n    return (\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\n        <AreaChart data={data}>\n          <Tooltip />\n          <Area\n            type=\"monotone\"\n            dataKey=\"uv\"\n            stroke=\"#0E8A74\"\n            fill=\"#0E8A74\"\n            strokeWidth={2}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass BarChart6 extends Component {\n  render() {\n    const data = {\n      defaultFontFamily: \"Poppins\",\n      labels: [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"],\n      datasets: [\n        {\n          label: \"Blue\",\n          backgroundColor: \"#0E8A74\",\n          hoverBackgroundColor: \"rgba(14, 138, 116, 1)\",\n          data: [\"12\", \"12\", \"12\", \"12\", \"12\", \"12\", \"12\"],\n        },\n        {\n          label: \"Glacier\",\n          backgroundColor: \"rgba(112, 159, 186, 1)\",\n          hoverBackgroundColor: \"rgba(112, 159, 186, 1)\",\n          data: [\"12\", \"12\", \"12\", \"12\", \"12\", \"12\", \"12\"],\n        },\n        {\n          label: \"Red\",\n          backgroundColor: \"rgba(238, 60, 60, 1)\",\n          hoverBackgroundColor: \"#ee3c3c\",\n          data: [\"12\", \"12\", \"12\", \"12\", \"12\", \"12\", \"12\"],\n        },\n      ],\n    };\n    const options = {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n      },\n      tooltips: {\n        mode: \"index\",\n        intersect: false,\n      },\n      responsive: true,\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n          },\n        ],\n      },\n    };\n\n    return (\n      <>\n        <Bar data={data} height={150} options={options} />\n      </>\n    );\n  }\n}\n\nexport default BarChart6;\n","import React from \"react\";\n// import { Link } from 'react-router-dom';\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport PageTitle from \"../../../layouts/PageTitle\";\n\nimport Bmi from \"./Bmi\";\nimport Height from \"./Height\";\nimport ViccinationStatus from \"./ViccinationStatus\";\n//import LegendEffectOpacity from \"./LegendEffectOpacity\";\n\nfunction RechartJs() {\n  return (\n    <>\n\n      <Row>\n        <Col xl={4} lg={4}>\n          <Card>            \n            <Card.Body>\n                <p>Blood presure(7)                    \n                    <span className=\"float-end text-success\">Normal</span>\n                </p>\n                <p><h5>125/85mm/hg</h5></p>                \n              <Bmi />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={4} lg={4}>\n          <Card>           \n            <Card.Body>\n            <p>Heart Rate(12)                    \n                    <span className=\"float-end text-success\">Normal</span>\n                </p>\n                <p><h5>85 per min</h5></p>\n              <Height />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={4} lg={4}>\n          <Card>            \n            <Card.Body>\n            <p>Oxygen Sat.(2)                    \n                    <span className=\"float-end text-danger\">Below Normal</span>\n                </p>\n                <p><h5>81%</h5></p>\n                <Height />\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col xl={4} lg={4}>\n          <Card>            \n            <Card.Body>\n                <p>BMI Status(8)                    \n                    <span className=\"float-end text-danger\">Overweight</span>\n                </p>\n                <p><h5>25.4</h5></p>                \n              <Bmi />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={4} lg={4}>\n          <Card>           \n            <Card.Body>\n            <p>Temperature(4)                    \n                    <span className=\"float-end text-success\">Normal</span>\n                </p>\n                <p><h5>97.00<sup>o</sup>F (36<sup>o</sup>C)</h5></p>\n              <Height />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={4} lg={4}>\n          <Card>            \n            <Card.Body>\n            <p>Respiration(1)                    \n                    <span className=\"float-end text-success\"> Normal</span>\n                </p>\n                <p><h5>22 per min</h5></p>\n                <Height />\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </>\n  );\n}\n\nexport default RechartJs;\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {  Card,CardBody,} from 'reactstrap';\nimport Button from \"@material-ui/core/Button\";\nimport {  toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport {FaSyringe, FaUserEdit, FaShare, FaTrash} from \"react-icons/fa\";\nimport { MdDashboard } from \"react-icons/md\";\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from 'semantic-ui-react'\nimport Vaccination from './../Vaccination/AddViccination'\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport Transfer from './../Transfer/Transfer';\nimport DeletePatient from './../Patient/DeletePatient';\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst PatientVaccinationHistory = (props) => {\n    \n    const [patientList, setPatientList] = useState([])\n    const [patientObj, setpatientObj] = useState([])\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const [transferModal, setTransferModal] = useState(false);\n    const Transfertoggle = () => setTransferModal(!transferModal);\n    const [deleteModal, setDeleteModal] = useState(false);\n    const Deletetoggle = () => setDeleteModal(!deleteModal);\n\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            axios\n                .get(`${baseUrl}covid/patients`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    console.log(response.data)\n                    setPatientList(response.data);\n                })\n                .catch((error) => {    \n                });        \n        }\n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now + \" year(s)\";\n        };\n\n    const loadVaccinationModal =(row)=> {\n        setpatientObj({...patientObj, ...row});\n            setModal(!modal)\n    }\n   \n    \n    const VaccinationStatusIcon = (patient)=>{\n        //patient.first_name + \" \"  + patient. last_name,\n        if(patient.vaccination_status===\"\"){\n            return (<><Icon name='dot circle outline' color=\"yellow\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Icon name='dot circle outline' color=\"blue\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Icon name='dot circle outline' color=\"green\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }else {\n            return (<><Icon name='dot circle outline' color=\"red\"/>{ patient.first_name + \" \"  + patient. last_name}</> )\n        }\n    }\n    const VaccinationStatus = (patient)=>{\n        //console.log(patient)\n        if(patient.vaccination_status===null){\n            return (<><Label color=\"yellow\" size=\"mini\">Not Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"1\"){\n            return (<><Label color=\"teal\" size=\"mini\">Parlly Vaccinated</Label></> )\n        }else if(patient.vaccination_status===\"2\"){\n            return (<><Label color=\"green\" size=\"mini\">Fully Vaccinated</Label></> )\n        }else {\n            return \"\"\n        }\n    }\n    const CurrentStatus = (currentStatus)=>{\n        if(currentStatus===\"4\"){\n            return (<Label color=\"blue\" size=\"mini\">admitted</Label>);\n        }else if(currentStatus===\"5\"){\n            return (<Label color=\"olive\" size=\"mini\">ICU</Label>);\n        }else if(currentStatus===\"6\"){\n            return (<Label color=\"teal\" size=\"mini\">Discharge</Label>);\n        }else if(currentStatus===\"7\"){\n            return (<Label color=\"red\" size=\"mini\">Dead</Label>);\n        }else {\n            return   (<Label color=\"green\" size=\"mini\">Active</Label>);\n        }\n\n    }\n\n\n  return (\n    <div>\n       <Card>\n         <CardBody>\n\n         <Link to={\"register-patient\"} >\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n                onClick={() => loadVaccinationModal()}\n\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Vaccination</span>\n            </Button>\n            </Link>        \n        <br/><br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Patient Vaccination History \"\n              columns={[\n              // { title: \" ID\", field: \"Id\" },\n                {\n                  title: \"Encounter Date\",\n                  field: \"date\",\n                },\n                { title: \"Vaccination Status\", field: \"v_status\", filtering: false },\n                { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              data={ patientList.map((row) => ({\n                  //Id: manager.id,\n                   date: VaccinationStatusIcon(row),\n                    v_status: row.participant_id,\n                    status: row.participant_id,\n                   \n                    actions:\n            \n                    <div>\n                    <Menu>\n                        <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\n                          Actions <span aria-hidden>▾</span>\n                        </MenuButton>\n                            <MenuList style={{ color:\"#000000 !important\"}} >\n                                                           \n                                  <MenuItem style={{ color:\"#000 !important\"}}  >\n                                     \n                                        <FaShare size=\"15\"  />{\" \"}\n                                        <span style={{color: '#000'}}>View</span>\n                                                                    \n                                  </MenuItem>\n                                  \n                                 \n                                  \n                          </MenuList>\n                    </Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              //backgroundColor: \"#9F9FA5\",\n                              color: \"#000\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    \n        </CardBody>\n       </Card>\n      <Vaccination toggle={toggle} showModal={modal} patientObj={patientObj} loadPatients={patients}/>\n      \n    </div>\n  );\n}\n\nexport default PatientVaccinationHistory;\n\n\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport ButtonMui from \"@material-ui/core/Button\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport PatientCardDetail from './PatientCard'\nimport { useHistory } from \"react-router-dom\";\nimport {   Tab, Tabs, } from \"react-bootstrap\";\nimport AddmissionHome from './../Admission/AddmissionHome';\nimport PatientChart from './../Patient/PatientChart/Index'\nimport PatientVaccinationHistory from './../Vaccination/VaccinationHistory'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\n\nfunction PatientCard(props) {\n    let history = useHistory();\n    const [key, setKey] = useState('home');\n    const { classes } = props;\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\n    //console.log(patientObj)\n  return (\n    <div className={classes.root}>\n      <Card >\n        <CardContent>\n        <Link to={\"/\"} >\n            <ButtonMui\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end ms-2\"\n                //startIcon={<FaUserPlus size=\"10\"/>}\n\n            >\n                <span style={{ textTransform: \"capitalize\" }}>Back</span>\n            </ButtonMui>\n            </Link>        \n            <br/><br/>\n            <div className=\"custom-tab-1\">\n            <Tabs\n              id=\"controlled-tab-example\"\n              activeKey={key}\n              onSelect={(k) => setKey(k)}\n              className=\"mb-3\"\n            >\n              <Tab eventKey=\"home\" title=\"Patient Chart\">\n                <PatientCardDetail patientObj={patientObj}/>\n                <PatientChart />\n              </Tab>\n               <Tab eventKey=\"Vaccination\" title=\"Vaccination\">\n              <PatientCardDetail patientObj={patientObj}/>\n                 {/* <PatientVaccinationHistory/> */}\n              </Tab>\n              <Tab eventKey=\"Addmission\" title=\"Admission\">\n              <PatientCardDetail patientObj={patientObj}/>\n                <AddmissionHome />\n              </Tab>\n              <Tab eventKey=\"Patient ICU\" title=\"Patient ICU\">\n              <PatientCardDetail patientObj={patientObj}/>\n                \n              </Tab>\n              <Tab eventKey=\"Discharge/Dead\" title=\"Discharge/Dead\">\n              <PatientCardDetail patientObj={patientObj}/>\n                \n              </Tab>\n              \n              \n            </Tabs>\n            </div>\n           \n            \n           \n          \n         </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./css/style.css\";\n\nimport RegisterPatient from './jsx/components/Patient/RegisterPatient'\nimport Home from './jsx/components/Home'\nimport EditPatient from './jsx/components/Patient/EditPatient'\nimport PatientDetail from './jsx/components/Patient/PatientDetail'\n\n\nexport default function App() {\n  return (\n\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n         \n          <Route path=\"/register-patient\">\n            <RegisterPatient />\n          </Route>\n          <Route path=\"/patient-dashboard\">\n            <PatientDetail />\n          </Route>\n          <Route path=\"/edit-patient\">\n            <EditPatient />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        \n          \n        </Switch>\n      </div>\n \n  );\n}\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let direction = 'ltr';\n\nexport const dezThemeSet = [\n\t{ /* Default */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\theaderBg: \"color_1\",\n\t\tnavheaderBg: \"color_1\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"full\",\n\t\tdirection: direction\n\t},\n\t{ /* Demo Theme 1 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tprimary: \"color_5\",\n\t\theaderBg: \"color_5\",\n\t\tnavheaderBg: \"color_1\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tdirection: direction\n\t},\n\t { /* Demo Theme 2 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_11\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarBg: \"color_11\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_11\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t/* Demo Theme 3 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"dark\",\n\t\tlayout: \"vertical\",\n\t\theaderBg: \"color_3\",\n\t\tnavheaderBg: \"color_3\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_1\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t/* Demo Theme 4 */\t\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_15\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_15\",\n\t\tdirection: direction\n\t\t\n\t},\n\t{\n\t\t/* Demo Theme 5 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"horizontal\",\n\t\tnavheaderBg: \"color_1\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarBg: \"color_9\",\n\t\tsidebarStyle: \"modern\",\n\t\tsidebarPosition: \"static\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_9\",\n\t\tdirection: direction\n\t},\n\t/* {\n\t\t//Demo Theme 6\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_3\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"mini\",\n\t\tsidebarBg: \"color_10\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_1\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t// Demo Theme 7 \n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_1\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"compact\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_6\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t// Demo Theme 8 *\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_15\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"icon-hover\",\n\t\tsidebarBg: \"color_15\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_15\",\n\t\tdirection: direction\n\t} */\n];\n\t","import React, { createContext, useEffect, useState } from \"react\";\nimport {dezThemeSet} from './ThemeDemo';\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = (props) => {\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\n\tconst [iconHover, setIconHover] = useState(false);\n\tconst [menuToggle, setMenuToggle] = useState(false);\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\n    const body = document.querySelector(\"body\");\n    const [windowWidth, setWindowWidth] = useState(0);\n    const [windowHeight, setWindowHeight] = useState(0);\n\n  // layout\n  const layoutOption = [\n    { value: \"vertical\", label: \"Vertical\" },\n    { value: \"horizontal\", label: \"Horizontal\" },\n  ];\n  const sideBarOption = [\n    { value: \"compact\", label: \"Compact\" },\n    { value: \"full\", label: \"Full\" },\n    { value: \"mini\", label: \"Mini\" },\n    { value: \"modern\", label: \"Modern\" },\n    { value: \"overlay\", label: \"Overlay\" },\n    { value: \"icon-hover\", label: \"Icon-hover\" },\n  ];\n  const backgroundOption = [\n    { value: \"light\", label: \"Light\" },\n    { value: \"dark\", label: \"Dark\" },\n  ];\n  const sidebarpositions = [\n    { value: \"fixed\", label: \"Fixed\" },\n    { value: \"static\", label: \"Static\" },\n  ];\n  const headerPositions = [\n    { value: \"fixed\", label: \"Fixed\" },\n    { value: \"static\", label: \"Static\" },\n  ];\n  const containerPosition = [\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\n    { value: \"boxed\", label: \"Boxed\" },\n    { value: \"wide\", label: \"Wide\" },\n  ];\n  const colors = [\n    \"color_1\",\n    \"color_2\",\n    \"color_3\",\n    \"color_4\",\n    \"color_5\",\n    \"color_6\",\n    \"color_7\",\n    \"color_8\",\n    \"color_9\",\n    \"color_10\",\n    \"color_11\",\n    \"color_12\",\n    \"color_13\",\n    \"color_14\",\n    \"color_15\",\n  ];\n  const directionPosition = [\n    { value: \"ltr\", label: \"LTR\" },\n    { value: \"rtl\", label: \"RTL\" },\n  ];\n  const fontFamily = [\n    { value: \"poppins\", label: \"Poppins\" },\n    { value: \"roboto\", label: \"Roboto\" },\n    { value: \"cairo\", label: \"Cairo\" },\n    { value: \"opensans\", label: \"Open Sans\" },\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\n  ];\n  const changePrimaryColor = (name) => {\n\tsetPrimaryColor(name);\n    body.setAttribute(\"data-primary\", name);\n  };\n  const changeNavigationHader = (name) => {\n    setNavigationHader(name);\n    body.setAttribute(\"data-nav-headerbg\", name);\n  };\n  const chnageHaderColor = (name) => {\n    setHaderColor(name);\n    body.setAttribute(\"data-headerbg\", name);\n  };\n  const chnageSidebarColor = (name) => {\n    setSidebarColor(name);\n    body.setAttribute(\"data-sibebarbg\", name);\n  };\n  const changeSideBarPostion = (name) => {\n    setSidebarposition(name);\n    body.setAttribute(\"data-sidebar-position\", name.value);\n  };\n  const changeDirectionLayout = (name) => {\n    setDirection(name);\n    body.setAttribute(\"direction\", name.value);\n    let html = document.querySelector(\"html\");\n    html.setAttribute(\"dir\", name.value);\n    html.className = name.value;\n  };\n  const changeSideBarLayout = (name) => {\n    if (name.value === \"horizontal\") {\n      if (sideBarStyle.value === \"overlay\") {\n        setSidebarLayout(name);\n        body.setAttribute(\"data-layout\", name.value);\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\n        body.setAttribute(\"data-sidebar-style\", \"full\");\n      } else {\n        setSidebarLayout(name);\n        body.setAttribute(\"data-layout\", name.value);\n      }\n    } else {\n      setSidebarLayout(name);\n      body.setAttribute(\"data-layout\", name.value);\n    }\n  };\n  const changeSideBarStyle = (name) => {\n    if (sidebarLayout.value === \"horizontal\") {\n      if (name.value === \"overlay\") {\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\n      } else {\n        setSideBarStyle(name);\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\n        body.setAttribute(\"data-sidebar-style\", name.value);\n      }\n    } else {\n      setSideBarStyle(name);\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\n      body.setAttribute(\"data-sidebar-style\", name.value);\n    }\n  };\n\n  const changeHeaderPostion = (name) => {\n    setHeaderposition(name);\n    body.setAttribute(\"data-header-position\", name.value);\n  };\n\n  const openMenuToggle = () => {\n    sideBarStyle.value === \"overly\"\n      ? setMenuToggle(true)\n      : setMenuToggle(false);\n  };\n\n  const changeBackground = (name) => {\n    body.setAttribute(\"data-theme-version\", name.value);\n    setBackground(name);\n  };\n\n  const changeContainerPosition = (name) => {\n    setcontainerPosition_(name);\n    body.setAttribute(\"data-container\", name.value);\n    name.value === \"boxed\" &&\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\n  };\n  \n  const setDemoTheme = (theme,direction) => {\n\n\tvar setAttr = {};\t\n\t\n\t\n\tvar themeSettings = dezThemeSet[theme];\t\n\t\t\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\n \n\tsetAttr.value = themeSettings.version;\n\tchangeBackground(setAttr);\n\t\n\tsetAttr.value = themeSettings.layout;\n\tchangeSideBarLayout(setAttr);\n\t\n\t//setAttr.value = themeSettings.primary;\n\tchangePrimaryColor(themeSettings.primary);\n\t\n//setAttr.value = themeSettings.navheaderBg;\n\tchangeNavigationHader(themeSettings.navheaderBg);\n\t\n//setAttr.value = themeSettings.headerBg;\n\tchnageHaderColor(themeSettings.headerBg);\n\t\n\tsetAttr.value = themeSettings.sidebarStyle;\n\tchangeSideBarStyle(setAttr);\n\t\n\t//setAttr.value = themeSettings.sidebarBg;\n\tchnageSidebarColor(themeSettings.sidebarBg);\n\t\n\tsetAttr.value = themeSettings.sidebarPosition;\n\tchangeSideBarPostion(setAttr);\n\t\n\tsetAttr.value = themeSettings.headerPosition;\n\tchangeHeaderPostion(setAttr);\n\t\n\tsetAttr.value = themeSettings.containerLayout;\n\tchangeContainerPosition(setAttr);\n\t\n\t//setAttr.value = themeSettings.direction;\n\tsetAttr.value = direction;\n\tchangeDirectionLayout(setAttr); \n\t\n\t};\n\n  useEffect(() => {\n\tconst body = document.querySelector(\"body\");\n    body.setAttribute(\"data-typography\", \"poppins\");\n    body.setAttribute(\"data-theme-version\", \"light\");\n    body.setAttribute(\"data-layout\", \"vertical\");\n    body.setAttribute(\"data-primary\", \"color_1\");\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\n    body.setAttribute(\"data-headerbg\", \"color_1\");\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\n    body.setAttribute(\"data-primary\", \"color_1\");\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\n    body.setAttribute(\"data-header-position\", \"fixed\");\n    body.setAttribute(\"data-container\", \"wide\");\n    body.setAttribute(\"direction\", \"ltr\");\n\t\tlet resizeWindow = () => {\n\t\t\tsetWindowWidth(window.innerWidth);\n\t\t\tsetWindowHeight(window.innerHeight);\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\n\t\t\t: window.innerWidth <= 768\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\n\t\t};\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, []);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        body,\n        sideBarOption,\n        layoutOption,\n        backgroundOption,\n        sidebarposition,\n        headerPositions,\n        containerPosition,\n        directionPosition,\n        fontFamily,\n\t\tprimaryColor,\n        navigationHader,\n\t\twindowWidth,\n\t\twindowHeight,\n        changePrimaryColor,\n        changeNavigationHader,\n        changeSideBarStyle,\n        sideBarStyle,\n        changeSideBarPostion,\n        sidebarpositions,\n        changeHeaderPostion,\n        headerposition,\n        changeSideBarLayout,\n        sidebarLayout,\n        changeDirectionLayout,\n        changeContainerPosition,\n        direction,\n        colors,\n        haderColor,\n        chnageHaderColor,\n        chnageSidebarColor,\n        sidebarColor,\n        iconHover,\n        menuToggle,\n        openMenuToggle,\n        changeBackground,\n        background,\n        containerPosition_,\n\t\tsetDemoTheme,\n\t}}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <Router basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </Router>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}